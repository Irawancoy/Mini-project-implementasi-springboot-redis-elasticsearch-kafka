spring.application.name=customer

# Konfigurasi database PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/customer
# URL untuk menghubungkan ke database PostgreSQL. Formatnya adalah jdbc:postgresql://host:port/database_name
spring.datasource.username=postgres
# Username yang digunakan untuk mengakses database PostgreSQL.
spring.datasource.password=12345
# Password yang digunakan untuk mengakses database PostgreSQL.

# Konfigurasi Hibernate untuk PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Dialek Hibernate yang digunakan untuk PostgreSQL. Ini memastikan Hibernate menghasilkan SQL yang sesuai untuk PostgreSQL.
spring.jpa.hibernate.ddl-auto=update
# Menentukan bagaimana Hibernate harus mengelola skema database:
# - 'update' akan memperbarui skema database agar sesuai dengan model entitas tanpa menghapus data yang ada.
# - Opsi lain termasuk 'create', 'create-drop', 'validate', dll.
spring.jpa.show-sql=true
# Mengatur Hibernate untuk menampilkan SQL yang dihasilkan di konsol selama runtime. Ini berguna untuk debugging.

# Konfigurasi Redis
spring.redis.host=localhost
# Host Redis server
spring.redis.port=6379
# Port Redis server. Default Redis berjalan di port 6379.

# Konfigurasi Elasticsearch
spring.data.elasticsearch.cluster-nodes=localhost:9200
# Node Elasticsearch yang digunakan untuk mengakses cluster. Formatnya adalah host:port.
spring.data.elasticsearch.cluster-name=my-apps
# Nama cluster Elasticsearch yang digunakan.
spring.data.elasticsearch.repositories.enabled=true
# Menentukan apakah Spring Data Elasticsearch harus diaktifkan atau tidak.

# Konfigurasi Kafka
spring.kafka.bootstrap-servers=localhost:9092
# Server bootstrap Kafka yang digunakan oleh aplikasi. Formatnya adalah host:port.
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Konfigurasi serializer untuk key dan value yang dikirimkan oleh producer.
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# Konfigurasi deserializer untuk key dan value yang diterima oleh consumer.
spring.kafka.consumer.group-id=my-group
# ID grup yang digunakan oleh consumer untuk mengonsumsi pesan dari topik Kafka.
spring.kafka.topic=my-topic
# Nama topik Kafka yang digunakan oleh aplikasi.